
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2019, Perry L Miller IV
//  All rights reserved.
//  MIT License: https://opensource.org/licenses/mit-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Base class with virtual type-id member.
//
///////////////////////////////////////////////////////////////////////////////

#include "Usul/Base/Typed.h"


namespace Usul {
namespace Base {


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor. We implement it because it is virtual.
//
///////////////////////////////////////////////////////////////////////////////

Typed::~Typed()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Return the type id.
//
///////////////////////////////////////////////////////////////////////////////

const std::type_info & Typed::typeId() const
{
  return typeid ( *this );
}


} // namespace Base
} // namespace Usul
