
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2019, Perry L Miller IV
//  All rights reserved.
//  MIT License: https://opensource.org/licenses/mit-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Type traits for 4x4 matrices.
//
///////////////////////////////////////////////////////////////////////////////

#ifndef _USUL_TYPE_TRAITS_4_BY_4_MATRIX_H_
#define _USUL_TYPE_TRAITS_4_BY_4_MATRIX_H_

#include "Usul/Math/Matrix44.h"


namespace Usul {
namespace Traits {


///////////////////////////////////////////////////////////////////////////////
//
//  Generic template definition is false.
//
///////////////////////////////////////////////////////////////////////////////

template < class T > struct Matrix44
{
  static constexpr bool VALUE = false;
};


///////////////////////////////////////////////////////////////////////////////
//
//  Specializations for matrix types. Add more as needed.
//
///////////////////////////////////////////////////////////////////////////////

template <> struct Matrix44 < Usul::Math::Matrix44d >
{
  static constexpr bool VALUE = true;
};
template <> struct Matrix44 < Usul::Math::Matrix44f >
{
  static constexpr bool VALUE = true;
};


} // namespace Traits
} // namespace Usul


#endif // _USUL_TYPE_TRAITS_4_BY_4_MATRIX_H_
