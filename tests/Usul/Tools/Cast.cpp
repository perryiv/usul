
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2019, Perry L Miller IV
//  All rights reserved.
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//
//  Test the function(s) for the tools.
//
////////////////////////////////////////////////////////////////////////////////

#include "Usul/Tools/Cast.h"

#include "catch2/catch.hpp"


////////////////////////////////////////////////////////////////////////////////
//
//  Some data types we use below.
//
////////////////////////////////////////////////////////////////////////////////

struct A
{
  A() : a ( 10 ){}
  int a;
};

struct B : public A
{
  B() : A(), b ( 20 ){}
  int b;
};


////////////////////////////////////////////////////////////////////////////////
//
//  Test the cast function.
//
////////////////////////////////////////////////////////////////////////////////

TEST_CASE ( "Unsafe casting" )
{
  SECTION ( "Can unsafely cast between types" )
  {
    A *a1 = new A();
    void *temp = USUL_UNSAFE_CAST ( A*, a1 );
    A *a2  = USUL_UNSAFE_CAST ( A*, temp );
    REQUIRE ( a1 == a2 );
  }

  SECTION ( "Can reinterpret cast between types" )
  {
    A *a1 = new A();
    void *temp = reinterpret_cast < void * > ( a1 );
    A *a2  = reinterpret_cast < A * > ( temp );
    REQUIRE ( a1 == a2 );
  }
}
